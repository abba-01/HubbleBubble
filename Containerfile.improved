# Multi-stage build for HubbleBubble reproducibility testing
# Produces a smaller, more efficient container image

# Stage 1: Builder - install dependencies in isolated environment
FROM python:3.12-slim AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    gfortran \
    libopenblas-dev \
    liblapack-dev \
    git \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment in builder
ENV VENV=/opt/venv
RUN python -m venv $VENV
ENV PATH="$VENV/bin:$PATH"

# Copy only requirements first (for layer caching)
WORKDIR /build
COPY requirements.txt .

# Install Python dependencies in venv
RUN pip install --no-cache-dir --upgrade pip wheel && \
    pip install --no-cache-dir -r requirements.txt

# Stage 2: Runtime - minimal image with only runtime dependencies
FROM python:3.12-slim

# Install only runtime libraries (no build tools)
RUN apt-get update && apt-get install -y --no-install-recommends \
    libopenblas0 \
    liblapack3 \
    libgfortran5 \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copy venv from builder stage
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set up working directory
WORKDIR /workspace

# Create output directories
RUN mkdir -p outputs/results outputs/logs outputs/reproducibility

# Copy project files
COPY . .

# Set environment variables for reproducibility
ENV PYTHONUNBUFFERED=1
ENV PYTHONHASHSEED=172901

# Add labels for metadata
LABEL org.opencontainers.image.title="HubbleBubble"
LABEL org.opencontainers.image.description="Hâ‚€ Concordance Validation with Reproducibility Framework"
LABEL org.opencontainers.image.version="1.1.1"
LABEL org.opencontainers.image.source="https://github.com/abba-01/HubbleBubble"

# Default command: run RENT audit
CMD ["python", "rent/run_rent.py", "--mode", "audit", "--quick"]

# Alternative commands users can override:
# docker run hubblebubble make validate
# docker run hubblebubble python rent/phase1_provenance/verify_environment.py
# docker run -it hubblebubble /bin/bash
